// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String               @id @default(uuid())
  firstName    String
  lastName     String?
  title        String?
  email        String               @unique
  password     String               
  role         String?              
  profileImage String?
  createdAt    DateTime             @default(now())
  updatedAt    DateTime             @updatedAt
  projects     ProjectParticipant[]
  tasks        TaskAssignies[]
}

model Project {
  id           String               @id @default(uuid())
  name         String
  participants ProjectParticipant[]
  createdAt    DateTime             @default(now())
  updatedAt    DateTime             @updatedAt
}

model ProjectParticipant {
  id        String  @id @default(cuid())
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId String
  role      String

  @@unique([userId, projectId])
}

model TaskAssignies{
  id        String  @id @default(cuid())
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  task      Task @relation(fields: [taskId], references: [id], onDelete: Cascade)
  taskId String
  @@unique([userId, taskId])
}

model Task {
  id            String  @id @default(uuid())
  description   String  @default("")
  // TODO : Add Comments 
  createdAt     DateTime             @default(now())
  updatedAt     DateTime             @updatedAt
  assignies     TaskAssignies[]
  status        String?
  subtasks      SubTasks[]
  priority      String?
}

model SubTasks{
  id            String  @id @default(uuid())
  name          String?
  complited     Boolean @default(false)
  taskId        String
  task          Task     @relation(fields: [taskId], references: [id], onDelete: Cascade)
}